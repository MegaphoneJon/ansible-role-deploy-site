---
- name: Update MFPL DNS
  local_action: command php "{{ inventory_dir }}/helpers/mfplapi.php" "{{ inventory_hostname }}" "{{ ansible_host }}"
  register: dnshelper_result
  #In theory, a better approach is to do a DNS lookup and see if I know how to control that nameserver.
  when: bare_url is search("megaphonetech.com")
  changed_when: "dnshelper_result.stdout != 'DNS already exists and is correct.'"
  become: no

- name: Create the run_as_user
  user:
    name: "{{ run_as_user }}"
    shell: /bin/nologin
    generate_ssh_key: yes
    home: "/home/{{ run_as_user }}"

- name: Get users to add to the new group
  set_fact:
    userlist: "{{ userlist|default([]) + [ item.value.name ] + [ ansible_user ] }}"
  with_dict: "{{ users }}"

- name: Get list of groups to add to users
  set_fact:
    grouplist: "{{ grouplist|default([]) + [ run_as_user ] }}"

- name: Add Megaphone staff to the newly-created group
  user:
    name: "{{ item[0] }}"
    append: yes
    groups:
      - "{{ item[1] }}"
  with_nested:
    - "{{ userlist }}"
    - "{{ grouplist }}"

- name: Create a php-fpm pool
  template:
    src: templates/php-pool.j2
    dest: /etc/php/{{ php_version }}/fpm/pool.d/{{ run_as_user }}.conf
  notify: restart php-fpm

- name: Create vhost conf (Apache)
  template:
    src: templates/vhost.conf.j2
    dest: /etc/apache2/sites-available/{{ bare_url }}.conf
  notify: restart apache

- name: Enable the site (Apache)
  file:
    src: /etc/apache2/sites-available/{{ bare_url }}.conf
    dest: /etc/apache2/sites-enabled/{{ bare_url }}.conf
    state: link
  notify: restart apache

- name: Check if repos exist on gogs - create if not
  uri:
    url: https://git.megaphonetech.com/api/v1/org/{{ git_repo_owner }}/repos
    method: POST
    headers:
      Authorization: token {{ lookup('passwordstore', 'megaphone/gogs/api') }}
    body:
      name: "{{ git_repo_name }}"
      description: "Repo for {{ git_repo_name }}"
      private: true
    body_format: json
  register: create_gogs_repo
  failed_when: not(create_gogs_repo.status == 201 or create_gogs_repo.status == 422 or create_gogs_repo.status == 403 or create_gogs_repo.status == 409)
  when: internal_repo == '1'

- name: Check if branches exist - if not, this repo is empty
  uri:
    url: https://git.megaphonetech.com/api/v1/repos/{{ git_repo_owner }}/{{ git_repo_name }}/branches
    method: GET
    headers:
      Authorization: token {{ lookup('passwordstore', 'megaphone/gogs/api') }}
    body:
      name: "{{ git_repo_name }}"
      description: "Repo for {{ git_repo_name }}"
      private: true
    body_format: json
  when: internal_repo == '1'
  register: repos
  tags: debug

# Tasks for blank sites regardless of CMS
- name: Create deploy keys
  include_tasks: deploy-keys.yml
  with_items: "{{ create_gogs_repo.results }}"
  when: create_gogs_repo.results is defined

- name: Create the folder hierarchy
  file:
    path: "{{ gitroot }}"
    state: directory
    mode: 02770
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
  become_user: root

- name: Make sure we can use htpasswd module
  apt: "pkg=python-passlib state=present"

- name: Add basic auth on test sites
  htpasswd:
    path: "{{ webroot }}/htpasswd"
    name: megaphone
    password: megaphone
    owner: root
    group: www-data
    mode: 0640
  become_user: root
  when: env == 'Test'

- name: Grant www-data user access to the parent folder
  acl:
    path: "{{ webroot }}/.."
    entity: www-data
    etype: user
    permissions: rx
    state: present
    recalculate_mask: no_mask
  become_user: root

- name: Grant www-data user access to the webroot
  acl:
    path: "{{ webroot }}"
    entity: www-data
    etype: user
    permissions: rx
    recursive: yes
    default: yes
    state: present
    recalculate_mask: no_mask
  become_user: root

#https://github.com/ansible/ansible/issues/26796
# FIXME: This looks to be fixed with recalculate: no_mask on the acl module
#- name: Deal with the Ansible ACL bug
#  command: setfacl -R -m user:www-data:rx,d:user:www-data:rx "{{ webroot }}"
#  changed_when: false
#  become_user: root

# MySQL
- name: Create CMS database
  mysql_db:
    name: "{{ cms_db_name }}"
    state: present

- name: Create CRM database
  mysql_db:
    name: "{{ crm_db_name }}"
    state: present
  when: civicrm == 'Yes'

- name: Create MySQL User and set db permissions
  mysql_user:
    name: "{{ db_user }}"
    password: "{{ lookup('passwordstore', client + '/' + ansible_ssh_host + '/' + bare_url + '/mysql create=true length=32') }}"
    priv: "{{ cms_db_name }}.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,LOCK TABLES,CREATE TEMPORARY TABLES,CREATE VIEW/{{ crm_db_name }}.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,LOCK TABLES,CREATE TEMPORARY TABLES,TRIGGER,CREATE ROUTINE,ALTER ROUTINE,CREATE VIEW,SHOW VIEW,REFERENCES{% if crm_logging_db_name|default('blank', True) != 'blank' %}/{{ crm_logging_db_name }}.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,LOCK TABLES,CREATE TEMPORARY TABLES,TRIGGER,CREATE ROUTINE,ALTER ROUTINE,CREATE VIEW,REFERENCES{% endif %}"
    host: 'localhost'
    state: present

- name: Set file owner
  file:
    dest: "{{ webroot }}"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
    recurse: yes
  become_user: root

- name: Create a site key if one doesn't exist.
  set_fact: dontcare="{{ lookup('passwordstore', client + '/' + ansible_ssh_host + '/' + bare_url + '/sitekey create=true length=32 nosymbols=yes') }}"
  with_items: "{{ create_gogs_repo.results }}"
  when: create_gogs_repo.results is defined

# If repos.item.json is > 0, then branches exist in the gitea repo.
# Build a new WP site
- name: Create fresh WordPress sites
  include_tasks: blank-wp.yml
  with_items: "{{ repos.results }}"
  when: ( internal_repo != "1" or repos.json | length == 0) and cms == 'WordPress'

# Build a new D7 site
- name: Create fresh Drupal 7 sites
  include_tasks: blank-drupal7.yml
  when: ( internal_repo != "1" or repos.json | length == 0) and cms == 'Drupal'
  notify:
  - restart apache
  - restart php-fpm

# Tasks for blank sites regardless of CMS
- name: Tasks for all fresh sites
  include_tasks: blank-site.yml
  when: ( internal_repo != "1" or repos.json | length == 0)

# For internal (git.megaphonetech.com) repos
- name: Build sites from existing git repo
  include_tasks: internal-git.yml
  when: (internal_repo == "1" and repos.json | length > 0)

# All Drupal sites
- name: Drupal tasks
  include_tasks: drupal7.yml
  when: cms == 'Drupal'
  tags: debug

# Normally this happens on login, but we need to do it now for API key purposes
- name: Create a CiviCRM contact for the admin user
  shell: echo '{"contact_type":"Individual", "display_name":"{{ monitoring_email }}","api_key":"'{{ lookup('passwordstore', client + '/' + ansible_ssh_host + '/' + bare_url + '/apikey create=true length=32') }}'","email":"{{ monitoring_email }}","options":{"match":"email"}}' | cv api contact.create --in=json
  args:
    chdir: "{{ webroot }}"
  become_user: "{{ run_as_user }}"
