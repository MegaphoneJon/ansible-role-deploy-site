---
- name: Check if branches exist - if not, this repo is empty
  uri:
    url: https://git.megaphonetech.com/api/v1/repos/{{ git_repo_owner }}/{{ git_repo_name }}/branches
    method: GET
    headers:
      Authorization: token {{ lookup('passwordstore', 'megaphone/gogs/api') }}
    body:
      name: "{{ git_repo_name }}"
      description: "Repo for {{ git_repo_name }}"
      private: true
    body_format: json
  when: internal_repo == '1'
  register: repos

- name: Create the folder hierarchy
  file:
    path: "{{ gitroot }}"
    state: directory
    mode: 02770
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
  become_user: root

- name: Create a site key
  set_fact: dontcare="{{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/sitekey create=true length=32 nosymbols=yes') }}"

# Build a new WP site
- name: Create fresh WordPress site
  include_tasks: blank-wp.yml
  when: ( internal_repo != "1" or repos.json | length == 0) and cms == 'WordPress'

# Build a new D7 site
- name: Create fresh Drupal 7 site
  include_tasks: blank-drupal7.yml
  when: ( internal_repo != "1" or repos.json | length == 0) and cms == 'Drupal'

# Build a new D8 site
- name: Create fresh Drupal 8 site
  include_tasks: blank-drupal8.yml
  when: ( internal_repo != "1" or repos.json | length == 0) and cms == 'Drupal8'

# For internal (git.megaphonetech.com) repos
- name: Build sites from existing git repo
  include_tasks: internal-git.yml
  when: (internal_repo == "1" and repos.json | length > 0)

# All Drupal sites
- name: Drupal tasks
  include_tasks: drupal7.yml
  when: cms == 'Drupal'

- name: Set the .gitignore
  copy:
    src: files/{{ cms|lower }}-gitignore
    dest: "{{ gitroot }}/.gitignore"
  become_user: "{{ run_as_user }}"
  when: cms != 'Other' and env == 'Dev'

# Tasks for blank sites regardless of CMS
- name: Tasks for all fresh sites
  include_tasks: blank-site.yml
  when: ( internal_repo != "1" or repos.json | length == 0)

- name: Make sure we can use htpasswd module
  apt: "pkg=python3-passlib state=present"
  tags: htpasswd

- name: Add basic auth on test sites
  htpasswd:
    path: "{{ webroot }}/htpasswd"
    name: megaphone
    password: megaphone
    owner: root
    group: www-data
    mode: 0640
  become_user: root
  when: env == 'Test'
  tags: htpasswd
