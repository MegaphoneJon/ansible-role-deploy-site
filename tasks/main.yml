---
- name: Check if branches exist - if not, this repo is empty
  uri:
    url: https://git.megaphonetech.com/api/v1/repos/{{ git_repo_owner }}/{{ git_repo_name }}/branches
    method: GET
    headers:
      Authorization: token {{ lookup('passwordstore', 'megaphone/gogs/api') }}
    body:
      name: "{{ git_repo_name }}"
      description: "Repo for {{ git_repo_name }}"
      private: true
    body_format: json
  when: internal_repo == '1'
  register: repos
  tags: civicrm.settings.php,settings.php,wp-config.php

- name: Create the folder hierarchy
  file:
    path: "{{ gitroot }}"
    state: directory
    mode: 02770
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
  become_user: root

- name: Create a site key
  set_fact: dontcare="{{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/sitekey create=true length=32 nosymbols=yes') }}"

# Build a new WP site
- name: Create fresh WordPress site
  include_tasks: blank-wp.yml
  when: (( internal_repo != "1" or repos.json | length == 0) and 'pantheon' not in group_names)  and cms == 'WordPress'

# Build a new D7 site
- name: Create fresh Drupal 7 site
  include_tasks: blank-drupal7.yml
  when: (( internal_repo != "1" or repos.json | length == 0) and 'pantheon' not in group_names) and cms == 'Drupal'

# Build a new D8 site
- name: Create fresh Drupal 8 site
  include_tasks: blank-drupal8.yml
  when: (( internal_repo != "1" or repos.json | length == 0) and 'pantheon' not in group_names) and cms == 'Drupal8'

# For building site from an existing git repo
- name: Build sites from existing git repo
  include_tasks: internal-git.yml
  when: (internal_repo == "1" and repos.json | length > 0) or "git.megaphonetech.com" not in git_repo_url
  tags: civicrm.settings.php,settings.php,wp-config.php

- name: git config - user/email
  blockinfile:
    path: "{{ gitroot }}/.git/config"
    block: |
      [user]
        email = none@megaphonetech.com
        name = {{ run_as_user }} on {{ inventory_hostname }}
  become: yes
  become_user: "{{ run_as_user }}"

- name: Set the .gitignore
  ansible.builtin.template:
    src: templates/{{ cms|lower }}-gitignore.j2
    dest: "{{ gitroot }}/.gitignore"
  become_user: "{{ run_as_user }}"
  when: cms != 'Other' and env == 'Dev'
  tags: gitignore

- name: git add
  command: git add -A
  args:
    chdir: "{{ gitroot }}"
  register: add_result
  changed_when: add_result.stdout != ''
  become_user: "{{ run_as_user }}"
  tags: git-add-commit-push

- name: git commit
  command: git commit -m "updated .gitignore"
  args:
    chdir: "{{ gitroot }}"
  register: commit_result
  changed_when: commit_result.rc == 0
  failed_when: 'commit_result.rc != 0 and not "nothing to commit, working tree clean" in commit_result.stdout_lines'
  become_user: "{{ run_as_user }}"
  tags: git-add-commit-push

# Tasks for blank sites regardless of CMS
- name: Tasks for all fresh sites
  include_tasks: blank-site.yml
  when: (( internal_repo != "1" or repos.json | length == 0) and 'pantheon' not in group_names)
  tags: civicrm.settings.php

- name: Make sure we can use htpasswd module
  apt: "pkg=python3-passlib state=present"
  tags: htpasswd

- name: Add basic auth on test sites
  htpasswd:
    path: "{{ webroot }}/htpasswd"
    name: megaphone
    password: megaphone
    owner: root
    group: www-data
    mode: 0640
  become_user: root
  when: env == 'Test'
  tags: htpasswd

- name: git push
  command: git push
  args:
    chdir: "{{ gitroot }}"
  register: push_result_addl
  become_user: "{{ run_as_user }}"
  when: internal_repo == "1" and (git_repo_push_url is search("ssh://"))
  changed_when: push_result_addl.rc == 0 and push_result_addl.stderr != 'Everything up-to-date'
  failed_when: not(push_result_addl.rc == 0)
  tags: git-add-commit-push
