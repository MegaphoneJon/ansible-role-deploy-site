- name: Check if Drupal has been installed yet
  command: "drush --root={{ webroot }} -y core-status bootstrap"
  register: drupal_installed

- name: clone an existing site
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ gitroot }}"
    version: master
    umask: "{{ umask }}"
    depth: 150
    track_submodules: no
  become_user: "{{ run_as_user }}"

- name: set an HTTP git push URL
  git_config:
    name: remote.origin.pushurl
    value: "{{ git_repo_push_url }}"
    scope: local
    repo: "{{ gitroot }}"
  become_user: "{{ run_as_user }}"
  when: (env == 'Test' or env == 'Live') and git_repo_name is not none

- name: Composer install (D8)
  composer:
    command: install
    working_dir: "{{ gitroot }}"
  when: cms == "Drupal8"
  become_user: "{{ run_as_user }}"

- name: Create CiviCRM uploads folder
  file:
    path: "{{ civicrm_settings_php_path }}"
    state: directory
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"

- name: Add civicrm.settings.php
  template:
    src: templates/civicrm.settings.j2
    dest: "{{ civicrm_settings_php_path }}/civicrm.settings.php"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
    mode: 0660
  become_user: root
  when: civicrm == 'Yes'
  tags: civicrm.settings.php

- name: Set group write permissions on CiviCRM folders
  file:
    path: "{{ civicrm_files_path }}"
    state: directory
    mode: g+w
    recurse: yes
  become_user: root
  when: civicrm == 'Yes'

- name: Get table names for Views integration
  command: "mysql -u{{ db_user }} -p{{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/mysql') }} {{ crm_db_name }} --skip-column-names --silent -e 'show tables'"
  register: civi_table_names
  when: (cms == 'Drupal' or cms == 'Drupal8' or cms == 'Backdrop') and civicrm == 'Yes'
  changed_when: false

- name: Check if Domain Access is in use
  command: "mysql -u{{ db_user }} -p{{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/mysql') }} {{ cms_db_name }} --skip-column-names --silent -e \"select REPLACE(filename, 'domain.module', 'settings.inc') from system WHERE name = 'domain'\""
  register: domain_access_path
  when: (cms == 'Drupal' or cms == 'Backdrop') and civicrm == 'Yes' and drupal_installed is search("Successful")
  changed_when: false

#TODO: Create a settings template for Backdrop
#TODO: Create the config folders for Backdrop/D8 with appropriate owner/perms
# config/active, config/staging, both owned/writable by run_as_user

- name: Add settings.php
  template:
    src: templates/{{ cms }}-settings.j2
    dest: "{{ webroot }}/sites/default/settings.php"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
  when: cms == 'Drupal' or cms == 'Drupal8' or cms == 'Backdrop'

- name: Create wp-config.php
  shell: |
    wp config create --dbname={{ cms_db_name }} --dbuser={{ db_user }} --dbpass={{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/mysql') }} {% if cms_table_prefix|default('blank', True) != 'blank' %}--dbprefix={{ cms_table_prefix}}{% endif %} --path={{ webroot }} --extra-php <<PHP
    define( 'WP_SITEURL', '{{ primary_url }}' );
    define( 'HABITAT_ENVIRONMENT', '{{ env }}' );
    {{ (env == 'Dev') | ternary('define( ''FORCE_SSL_ADMIN'', FALSE );', '') }}
  args:
    creates: "{{ webroot }}/wp-config.php"
  when: cms == 'WordPress'
  become_user: "{{ run_as_user }}"
