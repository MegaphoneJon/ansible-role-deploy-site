- name: Check out civicrm-setup
  git:
    repo: https://github.com/civicrm/civicrm-setup
    dest: /opt/civicrm-setup
  become_user: root
  when: civicrm == 'Yes'

# FIXME: Shouldn't this be done by now?
# - name: Create CiviCRM folder
#   file:
#     path: "{{ civiroot }}"
#     state: directory
#   when: civicrm == 'Yes'
#   become_user: "{{ run_as_user }}"

- name: Create CiviCRM uploads folder
  file:
    path: "{{ civicrm_settings_php_path }}"
    state: directory
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"

- name: Create CiviCRM extensions/templates/php folder.
  file:
    path: "{{ webroot }}/{{ filepath }}"
    state: directory
  loop_control:
    loop_var: filepath
  with_items:
    - "{{ civicrm_custom_path }}"
    - "{{ civicrm_custom_path }}/templates"
    - "{{ civicrm_custom_path }}/extensions"
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"

# FIXME: When can we do this? As root, yes. On May First, no. What about other nosudo situations? Probably not, huh.
- name: Set file permissions
  file:
    dest: "{{ webroot }}"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
    recurse: yes
    mode: ug=rwX
  when: "{{ false if run_as_user == ansible_user else true }}"

- name: Run cv core:install
  command: "cv -n core:install --db=mysql://{{ db_user }}:{{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/mysql') }}@localhost/{{ crm_db_name }} --cms-base-url={{ primary_url }}"
  args:
    chdir: "{{ civiroot }}"
    creates: "{{ civicrm_settings_php_path }}/civicrm.settings.php"
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"

# This one contains any customizations we might want, like extensions directory.
- name: Add civicrm.settings.php
  template:
    src: templates/civicrm.settings.j2
    dest: "{{ civicrm_settings_php_path }}/civicrm.settings.php"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
    mode: 0660
  when: civicrm == 'Yes'
  tags: civicrm.settings.php

- name: Get table names for Views integration
  command: "mysql -u{{ db_user }} -p{{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/mysql') }} {{ crm_db_name }} --skip-column-names --silent -e 'SHOW TABLES LIKE \"civi%\"'"
  register: civi_table_names
  when: (cms == 'Drupal' or cms == 'Drupal8' or cms == 'Backdrop') and civicrm == 'Yes'
  changed_when: false

- name: Push the settings.php template again, for Views integration
  template:
    src: "templates/{{ cms }}-settings.j2"
    dest: "{{ webroot }}/sites/default/settings.php"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
    mode: 0660
  tags: settings.php
  when: civicrm == 'Yes' and (cms == 'Drupal' or cms == 'Drupal8')

- block:
  - name: Create a blank repo
    command: "git init --initial-branch={{ git_main_branch }}"
    args:
      chdir: "{{ gitroot }}"
      creates: "{{ gitroot }}/.git"
    become_user: "{{ run_as_user }}"

  - name: set git name
    git_config:
      name: user.name
      repo: "{{ gitroot }}"
      scope: global
      value: "{{ run_as_user }} on {{ inventory_hostname }}"
    become_user: "{{ run_as_user }}"

  - name: set git email
    git_config:
      name: user.email
      repo: "{{ gitroot }}"
      scope: global
      value: 'none@megaphonetech.com'
    become_user: "{{ run_as_user }}"

  - name: set git remote
    git_config:
      name: remote.origin.url
      value: "{{ git_repo_url }}"
      scope: local
      repo: "{{ gitroot }}"
    become_user: "{{ run_as_user }}"


  - name: set an HTTP git push URL
    git_config:
      name: remote.origin.pushurl
      value: "{{ git_repo_push_url }}"
      scope: local
      repo: "{{ gitroot }}"
    become_user: "{{ run_as_user }}"
    when: (env == 'Test' or env == 'Live')

  - name: git add
    command: git add -A
    args:
      chdir: "{{ gitroot }}"
    register: add_result
    changed_when: add_result.stdout != ''
    become_user: "{{ run_as_user }}"

  - name: git commit
    command: git commit -m "Initial commit (via Ansible)"
    args:
      chdir: "{{ gitroot }}"
    register: commit_result
    changed_when: commit_result.rc == 0
    failed_when: 'commit_result.rc != 0 and not "nothing to commit, working tree clean" in commit_result.stdout_lines'
    become_user: "{{ run_as_user }}"
  when: git_repo_url is not none

# it seems like running git commands in Ansible is buggy, leads to files being owned by root.
- name: Set file permissions (again)
  file:
    dest: "{{ webroot }}"
    owner: "{{ run_as_user }}"
    group: "{{ run_as_user }}"
    recurse: yes
    mode: ug=rwX
  become_user: root

- block:
  - name: fix git permissions
    file:
      dest: "{{ gitroot }}/.git"
      owner: "{{ run_as_user }}"
      group: "{{ run_as_user }}"
      recurse: yes
      mode: ug=rwX
    become_user: root

  - name: git add
    command: git add -A
    args:
      chdir: "{{ gitroot }}"
    register: add_result
    changed_when: add_result.stdout != ''
    become_user: "{{ run_as_user }}"

  - name: git commit
    command: git commit -m "Fix site permissions"
    args:
      chdir: "{{ gitroot }}"
    register: commit_result
    changed_when: commit_result.rc == 0
    failed_when: 'commit_result.rc != 0 and not "nothing to commit, working tree clean" in commit_result.stdout_lines'
    become_user: "{{ run_as_user }}"

  - name: git push
    command: "git push --set-upstream origin {{ git_main_branch }}"
    args:
      chdir: "{{ gitroot }}"
    register: push_result
    when: internal_repo == "1" and (git_repo_push_url is not search("https://"))
    changed_when: push_result.rc == 0
    failed_when: not(push_result.rc == 0)
    become_user: "{{ run_as_user }}"
  when: git_repo_push_url is not none
