- name: Download wordpress
  command: "wp core download --path={{ webroot }}"
  args:
    creates: "{{ webroot }}/wp-load.php"
  become_user: "{{ run_as_user }}"

- name: Create wp-config.php
  shell: |
    wp config create --dbname={{ cms_db_name }} --dbuser={{ db_user }} --dbpass={{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/mysql') }} {% if cms_table_prefix|default('blank', True) != 'blank' %}--dbprefix={{ cms_table_prefix}}{% endif %} --path={{ webroot }}
  args:
    creates: "{{ webroot }}/wp-config.php"
  become_user: "{{ run_as_user }}"

- name: Additional wp-config.php settings
  ansible.builtin.blockinfile:
    path: "{{ webroot }}/wp-config.php"
    insertafter: ".table_prefix.*"
    marker: "# {mark} Additional WP settings"
    block: |
      define( 'WP_SITEURL', '{{ primary_url }}' );
      define( 'WP_HOME', '{{ primary_url }}' );
      define( 'HABITAT_ENVIRONMENT', '{{ env }}' );
      define( 'WP_CACHE', "{{ (env == 'Dev') | ternary(false, true) }}" );
      define( 'WPO_ADVANCED_CACHE', "{{ (env == 'Dev') | ternary(false, true) }}" );
  become_user: "{{ run_as_user }}"
  when: cms == 'WordPress' and 'pantheon' not in group_names

- name: Additional wp-config.php settings (for dev site)
  ansible.builtin.blockinfile:
    path: "{{ webroot }}/wp-config.php"
    insertafter: "# END Additional WP settings"
    marker: "# {mark} Additional WP settings (for dev site)"
    block: |
      define( 'FORCE_SSL_ADMIN', FALSE );
      # Disable WP Mail SMTP
      define( 'WPMS_ON', TRUE );
      define( 'WPMS_MAILER', 'mail' );
  become_user: "{{ run_as_user }}"
  when: cms == 'WordPress' and 'pantheon' not in group_names and env == 'Dev'

- name: Run the WP installer
  command: "wp core install --url={{ bare_url }} --title='{{ site_title }}' --admin_user=admin --admin_email={{ admin_email }} --admin_password={{ lookup('passwordstore', client + '/' + hostname + '/' + bare_url + '/admin create=true length=32') }}  --path={{ webroot }}"
  changed_when: wpinstaller.stdout != "WordPress is already installed."
  register: wpinstaller
  become_user: "{{ run_as_user }}"
  notify:
    - restart apache
    - restart php-fpm

- name: Install the wp-login companion plugin
  command: "wp login install --activate --path={{ webroot }}"
  args:
    creates: "{{ webroot }}/wp-content/plugins/wp-cli-login-server"
  become_user: "{{ run_as_user }}"

- name: Download the latest Civi archive
  get_url:
    url: https://download.civicrm.org/latest/civicrm-STABLE-wordpress.zip
    dest: /tmp/civicrm-STABLE-wordpress.zip
  when: civicrm == 'Yes'

- name: Unarchive the tarball
  unarchive:
    src: /tmp/civicrm-STABLE-wordpress.zip
    dest: "{{ webroot }}/wp-content/plugins"
    remote_src: yes
    creates: "{{ civiroot }}/composer.json"
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"

- name: Enable CiviCRM
  command: "wp plugin activate civicrm --path={{ webroot }}"
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"
